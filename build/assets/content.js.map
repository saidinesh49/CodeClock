{"version":3,"file":"content.js","sources":["../../src/contentScript.js"],"sourcesContent":["console.log('CodeClock: Content script loaded');\r\n\r\nlet timerContainer = null;\r\nlet isDragging = false;\r\nlet currentX;\r\nlet currentY;\r\nlet initialX;\r\nlet initialY;\r\nlet startTime;\r\nlet timerState = null;\r\nlet timerInterval = null;\r\nlet timeText = null;\r\nlet pausedTime = 0;\r\nlet pauseStartTime = null;\r\n\r\nconst TimerState = {\r\n  RUNNING: 'running',\r\n  PAUSED: 'paused',\r\n  STOPPED: 'stopped'\r\n};\r\n\r\n// Utility functions\r\nconst getCurrentPlatform = () => {\r\n  return window.location.hostname;\r\n};\r\n\r\nconst getTimerState = () => {\r\n  const savedState = localStorage.getItem('codeclock_timer_state');\r\n  if (savedState) {\r\n    try {\r\n      return JSON.parse(savedState);\r\n    } catch (error) {\r\n      console.error('Error getting timer state:', error);\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst clearTimerState = () => {\r\n  localStorage.removeItem('codeclock_timer_state');\r\n};\r\n\r\nconst saveTimerState = (state) => {\r\n  if (!timerContainer || !state) return;\r\n  \r\n  localStorage.setItem('codeclock_timer_state', JSON.stringify({\r\n    time: calculateElapsedTime(state),\r\n    difficulty: state.difficulty,\r\n    position: {\r\n      x: parseInt(timerContainer.style.left),\r\n      y: parseInt(timerContainer.style.top)\r\n    },\r\n    timestamp: Date.now()\r\n  }));\r\n};\r\n\r\nconst calculateElapsedTime = (state) => {\r\n  if (!state) return 0;\r\n  \r\n  const now = Date.now();\r\n  let totalPausedTime = 0;\r\n\r\n  // Calculate total paused time\r\n  state.pausedSegments.forEach(segment => {\r\n    if (segment.end) {\r\n      totalPausedTime += segment.end - segment.start;\r\n    } else if (state.status === TimerState.PAUSED) {\r\n      totalPausedTime += now - segment.start;\r\n    }\r\n  });\r\n\r\n  // Calculate total elapsed time minus paused time\r\n  return Math.floor((now - state.startTime - totalPausedTime) / 1000);\r\n};\r\n\r\nconst updateTimerDisplay = (time) => {\r\n  if (!timeText || !timerContainer) return;\r\n  const mins = Math.floor(time / 60);\r\n  const secs = time % 60;\r\n  timeText.textContent = `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  if (timerState) saveTimerState(timerState);\r\n};\r\n\r\nconst updatePauseButton = (symbol) => {\r\n  const pauseButton = timerContainer?.querySelector('button:first-child');\r\n  if (pauseButton) pauseButton.innerHTML = symbol;\r\n};\r\n\r\nconst startTimer = () => {\r\n  if (!timerContainer || !timerState) return;\r\n\r\n  const updateTimer = () => {\r\n    const elapsedTime = calculateElapsedTime(timerState);\r\n    const mins = Math.floor(elapsedTime / 60);\r\n    const secs = elapsedTime % 60;\r\n    timeText.textContent = `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n    saveTimerState(timerState);\r\n  };\r\n\r\n  timerInterval = setInterval(updateTimer, 1000);\r\n  updateTimer();\r\n};\r\n\r\n// Setup message listener for both development and production\r\nconst setupMessageListener = () => {\r\n  // Remove any existing timer state on page load\r\n  if (document.readyState === 'complete') {\r\n    const savedState = loadSavedState();\r\n    if (savedState) {\r\n      injectTimer(savedState.difficulty);\r\n    }\r\n  }\r\n\r\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    console.log('CodeClock: Message received:', message);\r\n    if (message.type === 'START_TIMER') {\r\n      // Add small delay to ensure DOM is ready\r\n      setTimeout(() => {\r\n        injectTimer(message.difficulty);\r\n        sendResponse({ status: 'Timer started' });\r\n      }, 100);\r\n    } else if (message.type === 'STOP_TIMER') {\r\n      removeTimer();\r\n      sendResponse({ status: 'Timer stopped' });\r\n    }\r\n    return true; // Keep the message channel open for sendResponse\r\n  });\r\n};\r\n\r\nsetupMessageListener();\r\n\r\n// Load saved position and time on init\r\nconst loadSavedState = () => {\r\n  const savedState = localStorage.getItem('codeclock_timer_state');\r\n  if (savedState) {\r\n    try {\r\n      const state = JSON.parse(savedState);\r\n      // Only restore if state is less than 24 hours old\r\n      if (Date.now() - state.timestamp < 24 * 60 * 60 * 1000) {\r\n        return state;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading saved state:', error);\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst createTimerControls = () => {\r\n  const controls = document.createElement('div');\r\n  controls.style.display = 'flex';\r\n  controls.style.gap = '8px';\r\n  controls.style.marginLeft = '8px';\r\n\r\n  const pauseResumeBtn = document.createElement('button');\r\n  pauseResumeBtn.style.cssText = `\r\n    background: none;\r\n    border: none;\r\n    color: #ffa116;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    font-size: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n  `;\r\n  \r\n  const updatePauseResumeButton = () => {\r\n    pauseResumeBtn.textContent = timerState.status === TimerState.PAUSED ? '▶' : '⏸';\r\n  };\r\n\r\n  pauseResumeBtn.onclick = () => {\r\n    if (timerState.status === TimerState.PAUSED) {\r\n      resumeTimer();\r\n    } else {\r\n      pauseTimer();\r\n    }\r\n    updatePauseResumeButton();\r\n  };\r\n  updatePauseResumeButton();\r\n\r\n  const stopBtn = document.createElement('button');\r\n  stopBtn.textContent = '⏹';\r\n  stopBtn.style.cssText = `\r\n    background: none;\r\n    border: none;\r\n    color: #ffa116;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    font-size: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n  `;\r\n  stopBtn.onclick = handleStop;\r\n\r\n  controls.appendChild(pauseResumeBtn);\r\n  controls.appendChild(stopBtn);\r\n  return controls;\r\n};\r\n\r\nconst handlePause = () => {\r\n  if (!timerState) return;\r\n\r\n  if (timerState.status === TimerState.RUNNING) {\r\n    clearInterval(timerInterval);\r\n    timerState.status = TimerState.PAUSED;\r\n    timerState.lastPauseStart = Date.now();\r\n    saveTimerState(timerState);\r\n    updatePauseButton('▶');\r\n  } else {\r\n    timerState.status = TimerState.RUNNING;\r\n    timerState.pausedSegments = timerState.pausedSegments || [];\r\n    if (timerState.lastPauseStart) {\r\n      timerState.pausedSegments.push({\r\n        start: timerState.lastPauseStart,\r\n        end: Date.now()\r\n      });\r\n    }\r\n    startTimer();\r\n    updatePauseButton('⏸');\r\n  }\r\n};\r\n\r\nconst injectTimer = (difficulty) => {\r\n  console.log('CodeClock: Injecting timer for difficulty:', difficulty);\r\n  if (timerContainer) {\r\n    removeTimer();\r\n  }\r\n\r\n  // Check for existing timer\r\n  const existingState = getTimerState();\r\n  if (existingState && existingState.platform === getCurrentPlatform()) {\r\n    if (!confirm('A timer is already running on this platform. Would you like to stop it and start a new one?')) {\r\n      return;\r\n    }\r\n    clearTimerState();\r\n  }\r\n\r\n  timerState = {\r\n    startTime: Date.now(),\r\n    difficulty,\r\n    platform: getCurrentPlatform(),\r\n    status: TimerState.RUNNING,\r\n    pausedSegments: []\r\n  };\r\n\r\n  const savedState = loadSavedState();\r\n  startTime = savedState ? Date.now() - (savedState.time * 1000) : Date.now();\r\n\r\n  // Create timer container\r\n  timerContainer = document.createElement('div');\r\n  timerContainer.id = 'codeclock-timer-container';\r\n  \r\n  // Set initial position from saved state or default\r\n  const initialPosition = savedState?.position || { x: 20, y: 20 };\r\n  timerContainer.style.cssText = `\r\n    position: fixed;\r\n    top: ${initialPosition.y}px;\r\n    left: ${initialPosition.x}px;\r\n    z-index: 10000;\r\n    background: ${window.codeclock_colors.background.paper};\r\n    padding: 6px 12px;\r\n    border-radius: 20px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    width: fit-content;\r\n    max-width: 200px;\r\n    white-space: nowrap;\r\n    cursor: move;\r\n  `;\r\n\r\n  // Create live indicator\r\n  const liveIndicator = document.createElement('div');\r\n  liveIndicator.style.cssText = `\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #ff375f;\r\n    border-radius: 50%;\r\n    animation: pulse 1.5s infinite;\r\n  `;\r\n\r\n  // Add pulse animation\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n    @keyframes pulse {\r\n      0% { opacity: 1; }\r\n      50% { opacity: 0.4; }\r\n      100% { opacity: 1; }\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n\r\n  // Create timer text element\r\n  timeText = document.createElement('div');\r\n  timeText.style.cssText = `\r\n    color: white;\r\n    font-family: monospace;\r\n    font-size: 14px;\r\n  `;\r\n\r\n  // Create controls\r\n  const controls = createTimerControls();\r\n\r\n  // Assemble timer components\r\n  timerContainer.appendChild(liveIndicator);\r\n  timerContainer.appendChild(timeText);\r\n  timerContainer.appendChild(controls);\r\n  document.body.appendChild(timerContainer);\r\n\r\n  // Start timer\r\n  startTimer();\r\n\r\n  // Make timer draggable\r\n  timerContainer.addEventListener('mousedown', dragStart);\r\n  document.addEventListener('mousemove', drag);\r\n  document.addEventListener('mouseup', dragEnd);\r\n\r\n  saveTimerState(timerState);\r\n};\r\n\r\nconst removeTimer = () => {\r\n  if (timerContainer) {\r\n    clearInterval(Number(timerContainer.dataset.interval));\r\n    if (timerInterval) clearInterval(timerInterval);\r\n    document.removeEventListener('mousemove', drag);\r\n    document.removeEventListener('mouseup', dragEnd);\r\n    timerContainer.remove();\r\n    timerContainer = null;\r\n    isDragging = false;\r\n    timerState = null;\r\n    localStorage.removeItem('codeclock_timer_state');\r\n  }\r\n};\r\n\r\nfunction dragStart(e) {\r\n  if (!timerContainer) return;\r\n  initialX = e.clientX - timerContainer.offsetLeft;\r\n  initialY = e.clientY - timerContainer.offsetTop;\r\n  isDragging = true;\r\n}\r\n\r\nfunction drag(e) {\r\n  if (!isDragging || !timerContainer) return;\r\n  e.preventDefault();\r\n  currentX = e.clientX - initialX;\r\n  currentY = e.clientY - initialY;\r\n  timerContainer.style.left = currentX + \"px\";\r\n  timerContainer.style.top = currentY + \"px\";\r\n  saveTimerState();\r\n}\r\n\r\nfunction dragEnd() {\r\n  isDragging = false;\r\n}\r\n\r\nconst handleStop = () => {\r\n  if (!timerState) return;\r\n\r\n  if (window.confirm('Are you sure you want to stop the timer?')) {\r\n    const message = {\r\n      type: 'TIMER_STOPPED',\r\n      data: { \r\n        time: calculateElapsedTime(timerState), \r\n        difficulty: timerState.difficulty \r\n      }\r\n    };\r\n    \r\n    chrome.runtime.sendMessage(message);\r\n    removeTimer();\r\n    timerState = null;\r\n  }\r\n};\r\n\r\n// Add pause/resume functions\r\nconst pauseTimer = () => {\r\n  if (!timerState || timerState.status !== TimerState.RUNNING) return;\r\n  \r\n  timerState.status = TimerState.PAUSED;\r\n  timerState.pausedSegments.push({\r\n    start: Date.now()\r\n  });\r\n  \r\n  clearInterval(timerInterval);\r\n  saveTimerState(timerState);\r\n};\r\n\r\nconst resumeTimer = () => {\r\n  if (!timerState || timerState.status !== TimerState.PAUSED) return;\r\n\r\n  const lastSegment = timerState.pausedSegments[timerState.pausedSegments.length - 1];\r\n  lastSegment.end = Date.now();\r\n  \r\n  timerState.status = TimerState.RUNNING;\r\n  startTimer();\r\n  saveTimerState(timerState);\r\n};\r\n"],"names":["timerContainer","isDragging","currentX","currentY","initialX","initialY","timerState","timerInterval","timeText","TimerState","getCurrentPlatform","getTimerState","savedState","error","clearTimerState","saveTimerState","state","calculateElapsedTime","now","totalPausedTime","segment","startTimer","updateTimer","elapsedTime","mins","secs","setupMessageListener","loadSavedState","injectTimer","message","sender","sendResponse","removeTimer","createTimerControls","controls","pauseResumeBtn","updatePauseResumeButton","resumeTimer","pauseTimer","stopBtn","handleStop","difficulty","existingState","initialPosition","liveIndicator","style","dragStart","drag","dragEnd","lastSegment"],"mappings":"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"}